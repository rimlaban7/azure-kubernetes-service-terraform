name: Initialize Backend Terraform State Storage
on: 
  workflow_dispatch

permissions:
      id-token: write
      contents: read

env:
  RESOURCE_GROUP_FULL_NAME: ${{ format('{0}-{1}', secrets.RESOURCE_GROUP_NAME, secrets.ENVIRONMENT_NAME) }}
  STORAGE_ACCOUNT_FULL_NAME: ${{ format('{0}{1}8675309', secrets.STORAGE_ACCOUNT_NAME, secrets.ENVIRONMENT_NAME) }}
  BLOB_CONTAINER_NAME: ${{ format('{0}-{1}', secrets.TERRAFORM_STATE_BLOB_CONTAINER_NAME, secrets.ENVIRONMENT_NAME) }}
      
jobs: 
  initialize-state-storage:
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
        run:
          shell: bash

    steps:
        - uses: actions/checkout@v4

        - name: Azure login
          uses: azure/login@v2
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

        # Execute Azure CLI script of a specific CLI version via file present in your repository.
        - name: Azure CLI script file
          uses: azure/cli@v2
          with:
            azcliversion: 2.30.0
            inlineScript: |
              az group create --name ${{ env.RESOURCE_GROUP_FULL_NAME }} --location ${{ secrets.REGION }}
              az storage account create --resource-group ${{ env.RESOURCE_GROUP_FULL_NAME }} --name ${{ env.STORAGE_ACCOUNT_FULL_NAME }} --sku ${{ secrets.STORAGE_ACCOUNT_SKU }} --encryption-services blob
              az storage container create --name ${{ env.BLOB_CONTAINER_NAME }} --account-name ${{ env.STORAGE_ACCOUNT_FULL_NAME }}